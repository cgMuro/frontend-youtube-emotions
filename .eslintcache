[{"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/index.js":"1","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/App.js":"2","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/reportWebVitals.js":"3","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Base.js":"4","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Home.js":"5","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Info.js":"6","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Analysis.js":"7","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/VideoState.js":"8","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/ApiState.js":"9","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/ErrorState.js":"10","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Loading.js":"11"},{"size":500,"mtime":1609166456490,"results":"12","hashOfConfig":"13"},{"size":473,"mtime":1609335931494,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609166456493,"results":"15","hashOfConfig":"13"},{"size":687,"mtime":1610043516650,"results":"16","hashOfConfig":"13"},{"size":3833,"mtime":1610043355324,"results":"17","hashOfConfig":"13"},{"size":1307,"mtime":1610043509811,"results":"18","hashOfConfig":"13"},{"size":11512,"mtime":1610042924792,"results":"19","hashOfConfig":"13"},{"size":343,"mtime":1609175175643,"results":"20","hashOfConfig":"13"},{"size":2064,"mtime":1609943280219,"results":"21","hashOfConfig":"13"},{"size":632,"mtime":1609267194164,"results":"22","hashOfConfig":"13"},{"size":211,"mtime":1609268139079,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pgeizf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/index.js",[],["48","49"],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/App.js",[],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/reportWebVitals.js",[],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Base.js",["50"],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Home.js",[],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Info.js",["51"],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Analysis.js",["52","53","54","55","56","57","58"],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/VideoState.js",[],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/ApiState.js",["59"],"import React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { ErrorContext } from './ErrorState';\n\nexport const ApiContext = createContext()\n\nexport function ApiProvider(props) {\n\n    const [predictions, setPredictions] = useState({\n        data: []\n    });\n    const [loading, setLoading] = useState(false);\n    const { getError, clearError, error } = useContext(ErrorContext);\n\n    // Get predictions\n    // GET https://app-youtube-sentiments.herokuapp.com/\n    const getPredictions = async(videoURL, numberComments=20, order='relevance') => {\n        try {\n            // Set the page to loading\n            setLoading(() => true);\n\n            console.log('Analyzing...');\n\n            // Make request to the API\n            const result = await axios.post(`https://cors-anywhere.herokuapp.com/https://app-youtube-sentiments.herokuapp.com/api/comments/${videoURL}?maxResults=${numberComments}&order=${order}`);\n\n            // Check for errors\n            if (result.data.success) {\n                // Set predictions\n                setPredictions(() => result.data);\n\n                clearError();\n\n                // Set the page to not loading\n                setLoading(() => false);\n\n                console.log('Done.');\n\n                return true;\n            } else {\n                getError(result.data['messagge'], result.data.status);\n\n                // Set the page to not loading\n                setLoading(() => false);\n\n                console.log('Done.');\n                return false;\n\n            }\n        } catch (error) {\n            // Set the page to not loading\n            setLoading(() => false);\n\n            // Set error\n            getError(\"Something went wrong\", 500);\n\n            // Return error in the console\n            console.log('Something went wrong...');\n            return false;\n        }\n    }\n\n\n    return (\n        <ApiContext.Provider value={{ predictions, loading, getPredictions, setLoading }}>\n            {props.children}\n        </ApiContext.Provider>\n    )\n}\n","/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/context/ErrorState.js",[],"/Users/gioele/Desktop/Web Dev/Frontend/mine/youtube-emotions/src/components/Loading.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":2,"column":25,"nodeType":"66","messageId":"67","endLine":2,"endColumn":36},{"ruleId":"69","severity":1,"message":"70","line":51,"column":13,"nodeType":"71","messageId":"72","endLine":51,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":61,"column":15,"nodeType":"75","endLine":68,"endColumn":6},{"ruleId":"73","severity":1,"message":"76","line":68,"column":8,"nodeType":"77","endLine":68,"endColumn":10,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":98,"column":72,"nodeType":"75","messageId":"80","endLine":98,"endColumn":74},{"ruleId":"69","severity":1,"message":"79","line":138,"column":72,"nodeType":"75","messageId":"80","endLine":138,"endColumn":74},{"ruleId":"69","severity":1,"message":"79","line":178,"column":72,"nodeType":"75","messageId":"80","endLine":178,"endColumn":74},{"ruleId":"81","severity":1,"message":"82","line":190,"column":103,"nodeType":"83","endLine":190,"endColumn":118},{"ruleId":"64","severity":1,"message":"84","line":13,"column":35,"nodeType":"66","messageId":"67","endLine":13,"endColumn":40},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Info' is defined but never used.","Identifier","unusedVar","'ModalHeader' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'counterFunction', 'fetchPredictions', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["87"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [counterFunction, fetchPredictions, history]",{"range":"90","text":"91"},[2111,2113],"[counterFunction, fetchPredictions, history]"]